name: CI
on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        components: rustfmt, clippy
        toolchain: stable
        default: true
    - name: rust lint
      run: |
        ./cargo check --no-default-features
        ./cargo fmt -- --check

  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
    - name: build
      run: ./cargo build --release && target/release/gfabase version
    - name: test
      run: |
        sudo apt-get install -y aria2 tabix zstd
        sudo pip3 install genomicsqlite
        prove -v test/*.t

  linux-x86-64-exe:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: build exe
      run: docker build -t gfabase .
    - name: test exe
      run: docker run --rm gfabase
    - name: run-up in clean centos:7
      run: |
        docker run gfabase sha256sum target/release/gfabase
        docker run -v $(pwd):/mnt --rm gfabase cp target/release/gfabase /usr/local/lib/libsqlite3.so.0 /mnt
        echo -n "required glibc: "
        objdump -t gfabase | grep -o 'GLIBC_.*' | sort -Vr | head -n1
        echo -n "RPATH: "
        readelf -d gfabase | grep RPATH
        docker run --rm -v $(pwd):/mnt centos:7 ldd -v -r /mnt/gfabase
        docker run --rm -v $(pwd):/mnt centos:7 /mnt/gfabase version
    - name: digest
      run: ./gfabase version && sha256sum gfabase
    - uses: actions/upload-artifact@v2
      with:
        name: gfabase-linux-x86-64
        path: gfabase

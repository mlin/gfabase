name: CI
on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        components: rustfmt, clippy
        toolchain: stable
        default: true
    - name: rust lint
      run: |
        ./cargo check --no-default-features
        ./cargo fmt -- --check

  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
    - name: build
      run: ./cargo build --release && target/release/gfabase version
    - name: test
      run: |
        sudo apt-get install -y aria2 tabix zstd
        sudo pip3 install genomicsqlite miniwdl
        prove -v test/*.t

  linux-x86-64-exe:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: build exe
      run: docker build -t gfabase .
    - name: test exe
      run: docker run --rm gfabase
    - name: run-up in clean centos:7
      run: |
        docker run gfabase sha256sum target/release/gfabase
        docker run -v $(pwd):/mnt --rm gfabase cp target/release/gfabase /mnt
        echo -n "required glibc: "
        objdump -t gfabase | grep -o 'GLIBC_.*' | sort -Vr | head -n1
        echo -n "RPATH: "
        readelf -d gfabase | grep RPATH
        docker run --rm -v $(pwd):/mnt centos:7 ldd -v -r /mnt/gfabase
        docker run --rm -v $(pwd):/mnt centos:7 /mnt/gfabase version
    - name: digest
      run: |
        mv gfabase gfabase-linux-x86-64
        ./gfabase-linux-x86-64 version && sha256sum gfabase-linux-x86-64
    - uses: actions/upload-artifact@v2
      with:
        name: gfabase-linux-x86-64
        path: gfabase-linux-x86-64

  macOS-x86-64-exe:
    runs-on: macOS-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: dependencies
      run: |
        BREW_DEPS="python@3.9 sqlite zstd aria2 coreutils"
        rm -f /usr/local/bin/2to3  # https://github.com/pypa/pipenv/issues/3831
        brew update || (sleep 2; brew update)
        for dep in $BREW_DEPS ; do
          brew install $dep || brew upgrade $dep
        done
    - name: rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
    - name: build environment
      run: |
        echo "PATH=${PREFIX}/opt/python/libexec/bin:${PREFIX}/opt/sqlite/bin:${PATH}" >> $GITHUB_ENV
        echo 'RUSTFLAGS=-C target-cpu=ivybridge -C link-args=-Wl,-rpath,@executable_path/.' >> $GITHUB_ENV
    - name: build
      run: ./cargo build --release && cp target/release/gfabase ./gfabase-macOS-x86-64
    - name: test
      run: |
        prove -v test/{1,2}*.t
    - name: symbols & digests
      run: |
        otool -L gfabase-macOS-x86-64
        otool -l gfabase-macOS-x86-64 | grep RPATH
        ./gfabase-macOS-x86-64 version
        sha256sum gfabase-macOS-x86-64
    - uses: actions/upload-artifact@v2
      with:
        name: gfabase-macOS-x86-64
        path: gfabase-macOS-x86-64

  artifacts:
    runs-on: ubuntu-20.04
    needs: [linux-x86-64-exe, macOS-x86-64-exe]
    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: fetch linux exe
      uses: actions/download-artifact@v2
      with:
        name: gfabase-linux-x86-64
    - name: fetch macOS exe
      uses: actions/download-artifact@v2
      with:
        name: gfabase-macOS-x86-64
    - name: detect GIT_REVISION
      run: |
        git fetch origin --tags
        echo "GIT_REVISION=$(git describe --tags --always)" >> $GITHUB_ENV
    - uses: actions/upload-artifact@v2
      with:
        name: gfabase-${{ env.GIT_REVISION }}
        path: |
          gfabase-linux-x86-64
          gfabase-macOS-x86-64
    - name: digests
      run: sha256sum gfabase-*
 